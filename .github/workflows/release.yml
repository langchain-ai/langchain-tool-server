name: release
run-name: Release packages by @${{ github.actor }}
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      package:
        description: "Which package to publish"
        default: "both"
        required: true
        type: choice
        options:
          - "both"
          - "client"
          - "server"
      dangerous-nonmain-release:
        required: false
        type: boolean
        default: false
        description: "Release from a non-main branch (danger!)"

env:
  PYTHON_VERSION: "3.11"
  UV_FROZEN: "true"
  UV_NO_SYNC: "true"

jobs:
  # Build client package
  build-client:
    if: (github.ref == 'refs/heads/main' || inputs.dangerous-nonmain-release || startsWith(github.ref, 'refs/tags/')) && (github.event_name != 'workflow_dispatch' || github.event.inputs.package == 'both' || github.event.inputs.package == 'client')
    environment: Scheduled testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python + uv
        uses: "./.github/actions/uv_setup"
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Build project for distribution
        run: uv build
        working-directory: libs/sdk-py
      
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: dist-langchain-tool-client
          path: libs/sdk-py/dist/

  # Build server package  
  build-server:
    if: (github.ref == 'refs/heads/main' || inputs.dangerous-nonmain-release || startsWith(github.ref, 'refs/tags/')) && (github.event_name != 'workflow_dispatch' || github.event.inputs.package == 'both' || github.event.inputs.package == 'server')
    environment: Scheduled testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python + uv
        uses: "./.github/actions/uv_setup"
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Build project for distribution
        run: uv build
        working-directory: libs/server
      
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: dist-langchain-tool-server
          path: libs/server/dist/

  # Publish client package
  publish-client:
    if: always() && !cancelled() && (github.event_name != 'workflow_dispatch' || github.event.inputs.package == 'both' || github.event.inputs.package == 'client')
    needs: [build-client]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: dist-langchain-tool-client
          path: libs/sdk-py/dist/

      - name: Publish langchain-tool-client to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: libs/sdk-py/dist/
          verbose: true
          print-hash: true
          attestations: false

  # Publish server package
  publish-server:
    if: always() && !cancelled() && (github.event_name != 'workflow_dispatch' || github.event.inputs.package == 'both' || github.event.inputs.package == 'server')
    needs: [build-server]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: dist-langchain-tool-server
          path: libs/server/dist/

      - name: Publish langchain-tool-server to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: libs/server/dist/
          verbose: true
          print-hash: true
          attestations: false

  # Simplified release creation - only for tag pushes
  mark-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [publish-client, publish-server]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          makeLatest: true